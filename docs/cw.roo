// cw
// The following toplevelPackage command is commented out if we are creating
// the Roo project from within STS or...
// Actually, it works best if you run these first few commands by hand, then edit/place the database.properties file, then continue
// 1.
//project --topLevelPackage org.fanbar.cw
//
// Copy database.properties to: src\main\resources\META-INF\spring
// 2.
//jpa setup --database MYSQL --provider HIBERNATE
//
// 3.  May need to add the mysql plugin (if it is not already there)
// manually added spring-data-jpa to pom.xml
// database introspect --schema no-schema-required
// database introspect --schema cheerdb --file cheerdb_introspection.xml --enableViews yes
//addon install id --searchResultId 01
//
// on OSX, had to do the following instead:
//addon install bundle --bundleSymbolicName org.springframework.roo.wrapping.mysql-connector-java
//
//database introspect --schema cheerdb
//
// these are needed to create a database.properties file (if it doesn't already exist)
//database properties set --key database.driverClassName --value com.mysql.jdbc.Driver
//database properties set --key database.username --value root
//database properties set --key database.password --value changeme
//database properties set --key database.url --value jdbc:mysql://localhost:3306/cheerdb

// Reverse Engineer the database
database reverse engineer --schema cheerdb --package ~.domain

// Repos
repository jpa --interface ~.repo.PersonRepo --entity ~.domain.Person
repository jpa --interface ~.repo.FanRepo --entity ~.domain.Fan
repository jpa --interface ~.repo.HeroRepo --entity ~.domain.Hero
repository jpa --interface ~.repo.ContestRepo --entity ~.domain.Contest
repository jpa --interface ~.repo.SeasonRepo --entity ~.domain.Season
repository jpa --interface ~.repo.ImageRepo --entity ~.domain.Image
repository jpa --interface ~.repo.EventRepo --entity ~.domain.Event
repository jpa --interface ~.repo.RegaliaRepo --entity ~.domain.Regalia
repository jpa --interface ~.repo.AuthRepo --entity ~.domain.Auth
repository jpa --interface ~.repo.RoleRepo --entity ~.domain.Role

// Service
service type --interface ~.service.PersonService --entity ~.domain.Person
service type --interface ~.service.FanService --entity ~.domain.Fan
service type --interface ~.service.HeroService --entity ~.domain.Hero
service type --interface ~.service.ContestService --entity ~.domain.Contest
service type --interface ~.service.SeasonService --entity ~.domain.Season
service type --interface ~.service.ImageService --entity ~.domain.Image
service type --interface ~.service.EventService --entity ~.domain.Event
service type --interface ~.service.RegaliaService --entity ~.domain.Regalia
service type --interface ~.service.AuthService --entity ~.domain.Auth
service type --interface ~.service.RoleService --entity ~.domain.Role


// MVC
web mvc setup
web mvc scaffold --class ~.web.PersonController --backingType ~.domain.Person
web mvc scaffold --class ~.web.FanController --backingType ~.domain.Fan
web mvc scaffold --class ~.web.HeroController --backingType ~.domain.Hero
web mvc scaffold --class ~.web.ContestController --backingType ~.domain.Contest
web mvc scaffold --class ~.web.SeasonController --backingType ~.domain.Season
web mvc scaffold --class ~.web.ImageController --backingType ~.domain.Image
web mvc scaffold --class ~.web.EventController --backingType ~.domain.Event
web mvc scaffold --class ~.web.RegaliaController --backingType ~.domain.Regalia
web mvc scaffold --class ~.web.AuthController --backingType ~.domain.Auth
web mvc scaffold --class ~.web.RoleController --backingType ~.domain.Role

// Finders
//(generic - not sure these are even needed as they may already be included?)
web mvc finder add --formBackingType ~.domain.Person --class ~.web.PersonController
web mvc finder add --formBackingType ~.domain.Fan --class ~.web.FanController
web mvc finder add --formBackingType ~.domain.Hero --class ~.web.HeroController
web mvc finder add --formBackingType ~.domain.Contest --class ~.web.ContestController
web mvc finder add --formBackingType ~.domain.Season --class ~.web.SeasonController
web mvc finder add --formBackingType ~.domain.Image --class ~.web.ImageController
web mvc finder add --formBackingType ~.domain.Event --class ~.web.EventController
web mvc finder add --formBackingType ~.domain.Regalia --class ~.web.RegaliaController
//
// 
//finder list --class ~.domain.Fan
finder add --finderName findFansByName --class ~.domain.Fan
//finder list --class ~.domain.Person
finder add --finderName findPeopleByUsernameEquals --class ~.domain.Person
finder add --finderName findPeopleByUsernameLike --class ~.domain.Person
//finder list --class ~.domain.Hero
finder add --finderName findHeroesByNameEquals --class ~.domain.Hero
finder add --finderName findHeroesByNameLike --class ~.domain.Hero
//finder list --class ~.domain.Contest
finder add --finderName findContestsByNameEquals --class ~.domain.Contest
finder add --finderName findContestsByNameLike --class ~.domain.Contest
//finder list --class ~.domain.Event
finder add --finderName findEventsByNameEquals --class ~.domain.Event
finder add --finderName findEventsByNameLike --class ~.domain.Event
//finder list --class ~.domain.Season
finder add --finderName findSeasonsByNameEquals --class ~.domain.Season
finder add --finderName findSeasonsByNameLike --class ~.domain.Season
//finder list --class ~.domain.Image
finder add --finderName findImagesByNameEquals --class ~.domain.Image
finder add --finderName findImagesByNameLike --class ~.domain.Image
//finder list --class ~.domain.Regalia
finder add --finderName findRegaliasByNameEquals --class ~.domain.Regalia
finder add --finderName findRegaliasByNameLike --class ~.domain.Regalia
//
// CAUTION - GO NO FURTHER (with the fancier finders anyway)!  Build this and copy to Push In first before proceeding!
//
finder add --finderName findEventsByEndGreaterThanEquals --class ~.domain.Event
finder add --finderName findEventsByBeginGreaterThanEquals --class ~.domain.Event
finder add --finderName findEventsByEndLessThanEquals --class ~.domain.Event
// The following three groups of finders are hampered by a Roo bug (see https://jira.spring.io/browse/ROO-3500)
//
//finder list --class ~.domain.Season
finder add --finderName findSeasonsByContests --class ~.domain.Season
finder add --finderName findSeasonsByEvent --class ~.domain.Season
// Note: until the above Roo bug is fixed, need to manually patch (so it compiles):
//  queryBuilder.append(" ORDER BY " + sortFieldName);  // pushed in to fix - was jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
// ...then select the aj code, and Push-In Refactor the following three ITD methods in Image_Roo_Finder.aj:
// ...except the Push In fails too on a Class cast exception...?
// 1. Image.findImagesByContests()
// 2. Image.findImagesByFans()
// 3. Image.findImagesByHeroes()
//
//finder list --class ~.domain.Image
finder add --finderName findImagesByFans --class ~.domain.Image
finder add --finderName findImagesByHeroes --class ~.domain.Image
finder add --finderName findImagesByContests --class ~.domain.Image
//finder list --class ~.domain.Regalia
finder add --finderName findRegaliasByHeroes --class ~.domain.Regalia
finder add --finderName findRegaliasByDarkerColorLike --class ~.domain.Regalia
finder add --finderName findRegaliasByLighterColorLike --class ~.domain.Regalia

// Selinium Tests
selenium test --controller ~.web.PersonController
selenium test --controller ~.web.FanController
selenium test --controller ~.web.HeroController
selenium test --controller ~.web.ContestController
selenium test --controller ~.web.SeasonController
selenium test --controller ~.web.ImageController
selenium test --controller ~.web.EventController
selenium test --controller ~.web.RegaliaController
selenium test --controller ~.web.AuthController
selenium test --controller ~.web.RoleController

// Adding Web Flow (unavailable)
//web flow setup
// see http://www.jayway.com/2011/05/18/spring-web-flow-roo-a-simple-example/

web flow --flowName registrationFlow
web flow --flowName heroFlow
web flow --flowName fanFlow
web flow --flowName personFlow
web flow --flowName contestFlow
web flow --flowName playFlow
web flow --flowName marketingFlow
web flow --flowName publicFlow

// json - caution!  Doing these two causes List functions to return [empty?] json
// (try enabling specific controllers instead)
//json all
//web mvc json all


// Security
// need web before we can secure
// see http://forum.spring.io/forum/spring-projects/roo/88203-command-security-setup-was-found-but-is-not-currently-available-type-help-then-e
// don't use this!
// web mvc all --package ~.web

security setup

// made it to here

//service secure all
//service secure all --interfacePackage ~.service.PersonService
// results in:
//service secure all --interfacePackage NullPointerException
//NullPointerException at org.springframework.roo.addon.layers.service.ServiceOperationsImpl.setupService(ServiceOperationsImpl.java:152)

// Backup
backup

// package the war
perform package

