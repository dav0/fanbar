// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.fanbar.cw.web;

import org.fanbar.cw.domain.Auth;
import org.fanbar.cw.domain.Contest;
import org.fanbar.cw.domain.Event;
import org.fanbar.cw.domain.Fan;
import org.fanbar.cw.domain.Hero;
import org.fanbar.cw.domain.Image;
import org.fanbar.cw.domain.Person;
import org.fanbar.cw.domain.Regalia;
import org.fanbar.cw.domain.Role;
import org.fanbar.cw.domain.Season;
import org.fanbar.cw.service.AuthService;
import org.fanbar.cw.service.ContestService;
import org.fanbar.cw.service.EventService;
import org.fanbar.cw.service.FanService;
import org.fanbar.cw.service.HeroService;
import org.fanbar.cw.service.ImageService;
import org.fanbar.cw.service.PersonService;
import org.fanbar.cw.service.RegaliaService;
import org.fanbar.cw.service.RoleService;
import org.fanbar.cw.service.SeasonService;
import org.fanbar.cw.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AuthService ApplicationConversionServiceFactoryBean.authService;
    
    @Autowired
    ContestService ApplicationConversionServiceFactoryBean.contestService;
    
    @Autowired
    EventService ApplicationConversionServiceFactoryBean.eventService;
    
    @Autowired
    FanService ApplicationConversionServiceFactoryBean.fanService;
    
    @Autowired
    HeroService ApplicationConversionServiceFactoryBean.heroService;
    
    @Autowired
    ImageService ApplicationConversionServiceFactoryBean.imageService;
    
    @Autowired
    PersonService ApplicationConversionServiceFactoryBean.personService;
    
    @Autowired
    RegaliaService ApplicationConversionServiceFactoryBean.regaliaService;
    
    @Autowired
    RoleService ApplicationConversionServiceFactoryBean.roleService;
    
    @Autowired
    SeasonService ApplicationConversionServiceFactoryBean.seasonService;
    
    public Converter<Auth, String> ApplicationConversionServiceFactoryBean.getAuthToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Auth, java.lang.String>() {
            public String convert(Auth auth) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Integer, Auth> ApplicationConversionServiceFactoryBean.getIdToAuthConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Auth>() {
            public org.fanbar.cw.domain.Auth convert(java.lang.Integer id) {
                return authService.findAuth(id);
            }
        };
    }
    
    public Converter<String, Auth> ApplicationConversionServiceFactoryBean.getStringToAuthConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Auth>() {
            public org.fanbar.cw.domain.Auth convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Auth.class);
            }
        };
    }
    
    public Converter<Contest, String> ApplicationConversionServiceFactoryBean.getContestToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Contest, java.lang.String>() {
            public String convert(Contest contest) {
                return new StringBuilder().append(contest.getName()).append(' ').append(contest.getHomeScore()).append(' ').append(contest.getVisitorScore()).toString();
            }
        };
    }
    
    public Converter<Integer, Contest> ApplicationConversionServiceFactoryBean.getIdToContestConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Contest>() {
            public org.fanbar.cw.domain.Contest convert(java.lang.Integer id) {
                return contestService.findContest(id);
            }
        };
    }
    
    public Converter<String, Contest> ApplicationConversionServiceFactoryBean.getStringToContestConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Contest>() {
            public org.fanbar.cw.domain.Contest convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Contest.class);
            }
        };
    }
    
    public Converter<Event, String> ApplicationConversionServiceFactoryBean.getEventToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Event, java.lang.String>() {
            public String convert(Event event) {
                return new StringBuilder().append(event.getName()).append(' ').append(event.getBegin()).append(' ').append(event.getEnd()).toString();
            }
        };
    }
    
    public Converter<Integer, Event> ApplicationConversionServiceFactoryBean.getIdToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Event>() {
            public org.fanbar.cw.domain.Event convert(java.lang.Integer id) {
                return eventService.findEvent(id);
            }
        };
    }
    
    public Converter<String, Event> ApplicationConversionServiceFactoryBean.getStringToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Event>() {
            public org.fanbar.cw.domain.Event convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Event.class);
            }
        };
    }
    
    public Converter<Fan, String> ApplicationConversionServiceFactoryBean.getFanToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Fan, java.lang.String>() {
            public String convert(Fan fan) {
                return new StringBuilder().append(fan.getName()).append(' ').append(fan.getTotalCheers()).toString();
            }
        };
    }
    
    public Converter<Integer, Fan> ApplicationConversionServiceFactoryBean.getIdToFanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Fan>() {
            public org.fanbar.cw.domain.Fan convert(java.lang.Integer id) {
                return fanService.findFan(id);
            }
        };
    }
    
    public Converter<String, Fan> ApplicationConversionServiceFactoryBean.getStringToFanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Fan>() {
            public org.fanbar.cw.domain.Fan convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Fan.class);
            }
        };
    }
    
    public Converter<Hero, String> ApplicationConversionServiceFactoryBean.getHeroToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Hero, java.lang.String>() {
            public String convert(Hero hero) {
                return new StringBuilder().append(hero.getName()).append(' ').append(hero.getCheers()).append(' ').append(hero.getWins()).toString();
            }
        };
    }
    
    public Converter<Integer, Hero> ApplicationConversionServiceFactoryBean.getIdToHeroConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Hero>() {
            public org.fanbar.cw.domain.Hero convert(java.lang.Integer id) {
                return heroService.findHero(id);
            }
        };
    }
    
    public Converter<String, Hero> ApplicationConversionServiceFactoryBean.getStringToHeroConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Hero>() {
            public org.fanbar.cw.domain.Hero convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Hero.class);
            }
        };
    }
    
    public Converter<Image, String> ApplicationConversionServiceFactoryBean.getImageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Image, java.lang.String>() {
            public String convert(Image image) {
                return new StringBuilder().append(image.getName()).append(' ').append(image.getImageUrl()).append(' ').append(image.getXOffset()).append(' ').append(image.getXLength()).toString();
            }
        };
    }
    
    public Converter<Integer, Image> ApplicationConversionServiceFactoryBean.getIdToImageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Image>() {
            public org.fanbar.cw.domain.Image convert(java.lang.Integer id) {
                return imageService.findImage(id);
            }
        };
    }
    
    public Converter<String, Image> ApplicationConversionServiceFactoryBean.getStringToImageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Image>() {
            public org.fanbar.cw.domain.Image convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Image.class);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getUsername()).append(' ').append(person.getEmail()).append(' ').append(person.getPassword()).toString();
            }
        };
    }
    
    public Converter<Integer, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Person>() {
            public org.fanbar.cw.domain.Person convert(java.lang.Integer id) {
                return personService.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Person>() {
            public org.fanbar.cw.domain.Person convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Person.class);
            }
        };
    }
    
    public Converter<Regalia, String> ApplicationConversionServiceFactoryBean.getRegaliaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Regalia, java.lang.String>() {
            public String convert(Regalia regalia) {
                return new StringBuilder().append(regalia.getName()).append(' ').append(regalia.getLighterColor()).append(' ').append(regalia.getDarkerColor()).append(' ').append(regalia.getLighterColorDesc()).toString();
            }
        };
    }
    
    public Converter<Integer, Regalia> ApplicationConversionServiceFactoryBean.getIdToRegaliaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Regalia>() {
            public org.fanbar.cw.domain.Regalia convert(java.lang.Integer id) {
                return regaliaService.findRegalia(id);
            }
        };
    }
    
    public Converter<String, Regalia> ApplicationConversionServiceFactoryBean.getStringToRegaliaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Regalia>() {
            public org.fanbar.cw.domain.Regalia convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Regalia.class);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Role>() {
            public org.fanbar.cw.domain.Role convert(java.lang.Integer id) {
                return roleService.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Role>() {
            public org.fanbar.cw.domain.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Role.class);
            }
        };
    }
    
    public Converter<Season, String> ApplicationConversionServiceFactoryBean.getSeasonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.fanbar.cw.domain.Season, java.lang.String>() {
            public String convert(Season season) {
                return new StringBuilder().append(season.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Season> ApplicationConversionServiceFactoryBean.getIdToSeasonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, org.fanbar.cw.domain.Season>() {
            public org.fanbar.cw.domain.Season convert(java.lang.Integer id) {
                return seasonService.findSeason(id);
            }
        };
    }
    
    public Converter<String, Season> ApplicationConversionServiceFactoryBean.getStringToSeasonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.fanbar.cw.domain.Season>() {
            public org.fanbar.cw.domain.Season convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Season.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAuthToStringConverter());
        registry.addConverter(getIdToAuthConverter());
        registry.addConverter(getStringToAuthConverter());
        registry.addConverter(getContestToStringConverter());
        registry.addConverter(getIdToContestConverter());
        registry.addConverter(getStringToContestConverter());
        registry.addConverter(getEventToStringConverter());
        registry.addConverter(getIdToEventConverter());
        registry.addConverter(getStringToEventConverter());
        registry.addConverter(getFanToStringConverter());
        registry.addConverter(getIdToFanConverter());
        registry.addConverter(getStringToFanConverter());
        registry.addConverter(getHeroToStringConverter());
        registry.addConverter(getIdToHeroConverter());
        registry.addConverter(getStringToHeroConverter());
        registry.addConverter(getImageToStringConverter());
        registry.addConverter(getIdToImageConverter());
        registry.addConverter(getStringToImageConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
        registry.addConverter(getRegaliaToStringConverter());
        registry.addConverter(getIdToRegaliaConverter());
        registry.addConverter(getStringToRegaliaConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getSeasonToStringConverter());
        registry.addConverter(getIdToSeasonConverter());
        registry.addConverter(getStringToSeasonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
